plugins {
    id 'java'
    id "jacoco"
    id 'io.freefair.lombok' version '4.1.6'
    id 'com.github.sherter.google-java-format' version '0.8'
    id 'nebula.release' version '13.0.0'
}

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    compile "org.apache.kafka:connect-api:$kafkaConnectVersion"
    compile "org.apache.kafka:connect-json:$kafkaConnectVersion"
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:$jacksonVersion"
    compile "com.amazonaws:aws-java-sdk-core:$awsSdkVersion"
    compile "com.amazonaws:aws-java-sdk-sns:$awsSdkVersion"
    compile "com.amazonaws:aws-java-sdk-sts:$awsSdkVersion"
    testCompile 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from(sourceSets.main.allJava)
}

group = 'de.flaconi.kafka.connect.sns'
description = 'Kafka Connect SNS Sink Connector'
sourceCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sourceSets {
    generated{
        java.srcDir "${buildDir}/generated-src/"
    }

    main {
        compileClasspath += generated.output
        runtimeClasspath += generated.output
    }

    test {
        compileClasspath += generated.output
        runtimeClasspath += generated.output
    }
}

task generateSources {
    def packageDir = project.group.toString().split('\\.').join('/')
    def outputDir = file("$buildDir/generated-src/$packageDir")
    outputs.dir outputDir
    doFirst {
        outputDir.exists() || outputDir.mkdirs()
        new File(outputDir, "Version.java").write("package ${project.group};\n\npublic class Version {\n  public static final String CURRENT = \"$project.version\";\n}\n")
    }
}
compileJava.dependsOn generateSources
compileJava.source generateSources.outputs.files, sourceSets.main.java
